{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sagar s\\\\Desktop\\\\emotion-recommender\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport RecommendationsList from \"./components/RecommendationsList\";\nimport QuoteCard from \"./components/QuoteCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mood, setMood] = useState(\"\");\n  const [recommendations, setRecommendations] = useState([]);\n  const [type, setType] = useState(\"\"); // \"music\" or \"quotes\"\n\n  const handleMoodSelect = selectedMood => {\n    setMood(selectedMood);\n\n    // Dummy data for now\n    if (selectedMood === \"Happy\") {\n      setRecommendations([{\n        title: \"Happy Song\",\n        artist: \"Pharrell Williams\",\n        url: \"https://spotify.com\",\n        albumImage: \"\"\n      }, {\n        quote: \"Happiness is a journey, not a destination.\",\n        author: \"Buddha\"\n      }]);\n    }\n  };\n  const handleDetect = () => {\n    alert(\"Detecting emotion... (placeholder)\");\n    // Later: integrate emotion detection\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-purple-600 to-pink-500 text-white p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-center mb-6\",\n      children: \"MoodMate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center mb-8\",\n      children: \"Find music & quotes that match your mood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-4 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodSelect(\"Happy\"),\n        className: \"px-4 py-2 bg-white/20 rounded-lg hover:bg-white/40\",\n        children: \"\\uD83D\\uDE03 Happy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDetect,\n        className: \"px-4 py-2 bg-white/20 rounded-lg hover:bg-white/40\",\n        children: \"Detect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"\\uD83C\\uDFB5 Songs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecommendationsList, {\n          recommendations: recommendations.filter(r => r.title),\n          type: \"music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"\\u2728 Quotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), recommendations.filter(r => r.quote).map((rec, i) => /*#__PURE__*/_jsxDEV(QuoteCard, {\n          quote: rec\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"b2aoiCeDzrdq2Fv/R9xWqxWzLpY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RecommendationsList","QuoteCard","jsxDEV","_jsxDEV","App","_s","mood","setMood","recommendations","setRecommendations","type","setType","handleMoodSelect","selectedMood","title","artist","url","albumImage","quote","author","handleDetect","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filter","r","map","rec","i","_c","$RefreshReg$"],"sources":["C:/Users/Sagar s/Desktop/emotion-recommender/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport RecommendationsList from \"./components/RecommendationsList\";\r\nimport QuoteCard from \"./components/QuoteCard\";\r\n\r\nfunction App() {\r\n  const [mood, setMood] = useState(\"\");\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [type, setType] = useState(\"\"); // \"music\" or \"quotes\"\r\n\r\n  const handleMoodSelect = (selectedMood) => {\r\n    setMood(selectedMood);\r\n\r\n    // Dummy data for now\r\n    if (selectedMood === \"Happy\") {\r\n      setRecommendations([\r\n        { title: \"Happy Song\", artist: \"Pharrell Williams\", url: \"https://spotify.com\", albumImage: \"\" },\r\n        { quote: \"Happiness is a journey, not a destination.\", author: \"Buddha\" }\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleDetect = () => {\r\n    alert(\"Detecting emotion... (placeholder)\");\r\n    // Later: integrate emotion detection\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-600 to-pink-500 text-white p-6\">\r\n      <h1 className=\"text-4xl font-bold text-center mb-6\">MoodMate</h1>\r\n      <p className=\"text-center mb-8\">Find music & quotes that match your mood</p>\r\n\r\n      {/* Mood Selection */}\r\n      <div className=\"flex justify-center gap-4 mb-8\">\r\n        <button onClick={() => handleMoodSelect(\"Happy\")} className=\"px-4 py-2 bg-white/20 rounded-lg hover:bg-white/40\">\r\n          ðŸ˜ƒ Happy\r\n        </button>\r\n        <button onClick={handleDetect} className=\"px-4 py-2 bg-white/20 rounded-lg hover:bg-white/40\">\r\n          Detect\r\n        </button>\r\n      </div>\r\n\r\n      {/* Recommendations */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {/* Songs */}\r\n        <div>\r\n          <h2 className=\"text-2xl font-semibold mb-4\">ðŸŽµ Songs</h2>\r\n          <RecommendationsList recommendations={recommendations.filter((r) => r.title)} type=\"music\" />\r\n        </div>\r\n\r\n        {/* Quotes */}\r\n        <div>\r\n          <h2 className=\"text-2xl font-semibold mb-4\">âœ¨ Quotes</h2>\r\n          {recommendations.filter((r) => r.quote).map((rec, i) => (\r\n            <QuoteCard key={i} quote={rec} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}