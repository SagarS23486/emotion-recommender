{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sagar s\\\\Desktop\\\\emotion-recommender\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EmotionSelector from './components/EmotionSelector';\nimport RecommendationsList from './components/RecommendationsList';\nimport { fetchRecommendations } from './api/fetchRecommendations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [emotion, setEmotion] = useState('Happy');\n  const [type, setType] = useState('music');\n  const [recommendations, setRecommendations] = useState([]);\n  const getRecommendations = async () => {\n    const data = await fetchRecommendations(emotion, type);\n    setRecommendations(data);\n  };\n  const handleRefresh = () => {\n    getRecommendations();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emotion-Based Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EmotionSelector, {\n      emotion: emotion,\n      setEmotion: setEmotion,\n      type: type,\n      setType: setType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRecommendations,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Get Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecommendationsList, {\n      recommendations: recommendations,\n      type: type,\n      onRefresh: handleRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"v6ES9MJ07M+HSmoJ3zQW12kbW2w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","EmotionSelector","RecommendationsList","fetchRecommendations","jsxDEV","_jsxDEV","App","_s","emotion","setEmotion","type","setType","recommendations","setRecommendations","getRecommendations","data","handleRefresh","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","onRefresh","_c","$RefreshReg$"],"sources":["C:/Users/Sagar s/Desktop/emotion-recommender/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport EmotionSelector from './components/EmotionSelector';\r\nimport RecommendationsList from './components/RecommendationsList';\r\nimport { fetchRecommendations } from './api/fetchRecommendations';\r\n\r\nfunction App() {\r\n    const [emotion, setEmotion] = useState('Happy');\r\n    const [type, setType] = useState('music');\r\n    const [recommendations, setRecommendations] = useState([]);\r\n\r\n    const getRecommendations = async () => {\r\n        const data = await fetchRecommendations(emotion, type);\r\n        setRecommendations(data);\r\n    };\r\n\r\n    const handleRefresh = () => {\r\n        getRecommendations();\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <h1>Emotion-Based Recommender</h1>\r\n            <EmotionSelector\r\n                emotion={emotion}\r\n                setEmotion={setEmotion}\r\n                type={type}\r\n                setType={setType}\r\n            />\r\n            <button onClick={getRecommendations} style={{ marginTop: '10px' }}>\r\n                Get Recommendations\r\n            </button>\r\n            <RecommendationsList\r\n                recommendations={recommendations}\r\n                type={type}\r\n                onRefresh={handleRefresh}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,SAASC,oBAAoB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAC/C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMc,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,IAAI,GAAG,MAAMZ,oBAAoB,CAACK,OAAO,EAAEE,IAAI,CAAC;IACtDG,kBAAkB,CAACE,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBF,kBAAkB,CAAC,CAAC;EACxB,CAAC;EAED,oBACIT,OAAA;IAAKY,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5Bd,OAAA;MAAAc,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClClB,OAAA,CAACJ,eAAe;MACZO,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBC,IAAI,EAAEA,IAAK;MACXC,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFlB,OAAA;MAAQmB,OAAO,EAAEV,kBAAmB;MAACG,KAAK,EAAE;QAAEQ,SAAS,EAAE;MAAO,CAAE;MAAAN,QAAA,EAAC;IAEnE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTlB,OAAA,CAACH,mBAAmB;MAChBU,eAAe,EAAEA,eAAgB;MACjCF,IAAI,EAAEA,IAAK;MACXgB,SAAS,EAAEV;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAChB,EAAA,CAjCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}